---
version: 2.1

orbs:
  terraform: twdps/terraform@dev:<<pipeline.git.revision>>
  op: twdps/onepassword@2.0.6

globals:
  - &context orb-publishing
  - &shell op run --env-file op.env -- /bin/bash -eo pipefail

commands:

  echo-message:
    parameters:
      msg:
        type: string
    steps:
      - run:
          name: echo msg
          command: echo "<< parameters.msg >>"

  set-environment:
    steps:
      - op/env
      - run:
          name: set ~/.terraformrc
          command: op inject -i test/terraformrc.tpl -o ~/.terraformrc

  create-terraform-workspace:
    steps:
      - run:
          name: create terraform workspace
          command: terraform workspace new ci

  delete-terraform-workspace:
    parameters:
      tfc-organization:
        description: terraform cloud organization Name
        type: string
        default: ""
      tfc-workspace:
        description: Create and/or set local-mode workspace
        type: string
        default: ""
    steps:
      - run:
          name: delete terraform workspace
          command: bash test/delete_tfc_workspace.sh

jobs:

  test packages:
    docker:
      - image: twdps/circleci-infra-aws:alpine-stable
    steps:
      - checkout
      - terraform/packages:
          terraform-version: 1.6.0
          tflint-version: 0.48.0
          trivy-version: 0.46.0
          checkov-version: 2.5.13
          snyk-version: 1.1236.0
          terrascan-version: 1.18.3
          driftctl-version: 0.39.0
          infracost-version: 0.10.29

  test-terraformrc:
    docker:
      - image: twdps/circleci-infra-aws:alpine-stable
    steps:
      - checkout
      - op/env
      - terraform/terraformrc
      - run:
          name: validate ~/.terraformrc file
          command: |
            filesize=$(cat ~/.terraformrc | wc -c)
            if [[ $filesize < 50 ]]; then
              echo ".terraformrc template failure"
              exit 1
            fi

workflows:

  integration tests:
    jobs:
      - test packages

      - terraform/static-analysis:
          context: *context
          shell: *shell
          working-directory: test
          tflint-scan: true
          tflint-version: installed
          tflint-provider: aws
          tflint-additional-args: --format=compact --force
          trivy-scan: true
          trivy-version: installed
          trivy-commandline-args: config . --exit-code 0
          snyk-scan: true
          snyk-version: installed
          snyk-organization: twdps
          snyk-additional-args: --report --target-name=orb-terraform-ci
          checkov-scan: true
          checkov-version: installed
          checkov-additional-args: -d . --skip-check CKV_TF_1
          terrascan-scan: true
          terrascan-version: installed
          terrascan-custom-scan-args: -t aws -i terraform --output=yaml -d test/ --skip-rules="AC_AWS_0369"
          driftctl-scan: true
          driftctl-version: installed
          driftctl-additional-args: --help
          infracost-scan: true
          infracost-version: installed
          infracost-additional-args: breakdown --path .
          before-static-analysis:
            - terraform/packages:
                terrascan-version: 1.18.3
                infracost-version: 0.10.29
            - echo-message:
                msg: Hello, before!
          after-static-analysis:
            - echo-message:
                msg: Hello, after!

      - terraform/plan:
          context: *context
          shell: *shell
          working-directory: test
          workspace: ci
          tfc-workspace: orb-terraform-ci
          tfc-organization: twdps
          tfe-token: TFE_TOKEN
          terraform-var-file: ci.tfvars.json
          terraform-plan-outfile: ~/project/test/tfplan.json
          checkov-scan: true
          checkov-version: installed
          checkov-additional-args: --soft-fail
          before-plan:
            - set-environment
            - create-terraform-workspace
            - echo-message:
                msg: Hello, before plan!
          after-terraform-init:
            - echo-message:
                msg: Hello, after init!
          after-plan:
            - echo-message:
                msg: Hello, after plan!
            - delete-terraform-workspace
