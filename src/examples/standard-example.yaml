# src/examples/standard-example.yaml
# yamllint disable rule:line-length
---
description: Standard usage of the twdps/terraform orb workflow jobs

usage:
  version: 2.1

  orbs:
    terraform: twdps/terraform@1.0.0

  globals:
    - &context my-team
    - &shell op run --env-file op.env -- /bin/bash -eo pipefail
    - &terraform-version 1.6.2

  on-push-main: &on-push-main
    branches:
      only: /main/
    tags:
      ignore: /.*/

  on-tag-main: &on-tag-main
    branches:
      ignore: /.*/
    tags:
      only: /.*/

  commands:

    set-environment:
      description: generate environment credentials and configuration from templates
      parameters:
        env:
          type: string
          default: ''
      steps:
        - run:
            name: set ~/.terraformrc
            command: op inject -i tpl/terraformrc.tpl -o ~/.terraformrc
        - run:
            name: set << parameters.env >> environment variables
            command: op inject -i environments/<< parameters.env >>.auto.tfvars.json.tpl -o << parameters.env >>.auto.tfvars.json

  workflows:
    version: 2
    my-pipeline:

      jobs:

        - terraform/static-analysis:
            name: terraform static code analysis
            context: *context
            shell: *shell
            workspace: sandbox
            terraforom-version: *terraform-version
            tflint-version: installed
            tflint-provider: aws
            tflint-additional-args: --format=compact --force
            tfsec-version: installed
            tfsec-additional-args: --exclude aws-ec2-no-excessive-port-access,aws-ec2-no-public-ingress-acl,aws-ec2-require-vpc-flow-logs-for-all-vpcs
            snyk-version: installed
            snyk-organization: twdps
            snyk-additional-args: --report --target-name=orb-terraform-ci
            before-static-analysis:
              - set-environment
            filter: *on-push-main

        - terraform/plan:
            name: plan changes for sandbox environment
            context: *context
            shell: *shell
            workspace: sandbox
            tfc-workspace: my-pipeline-sandbox
            tfc-organization: twdps
            tfe-token: TFE_TOKEN
            terraform-var-file: environments/sandbox.tfvars.json
            snyk-version: installed
            snyk-organization: twdps
            snyk-additional-args: --report --target-name= my-pipeline-sandbox
            before-plan:
              - set-environment
            requires:
              - terraform static code analysis
            filters: *on-push-main

        - approve-sandbox-changes:
            type: approval
            requires:
              - plan changes for sandbox environment
            filters: *on-push-main

        - terraform/apply:
            name: apply changes to sandbox environment
            context: *context
            shell: *shell
            workspace: sandbox
            tfc-workspace: my-pipeline-sandbox
            tfc-organization: twdps
            tfe-token: TFE_TOKEN
            terraform-var-file: environments/sandbox.tfvars.json
            snyk-version: installed
            snyk-organization: twdps
            snyk-additional-args: --report --target-name= my-pipeline-sandbox
            before-plan:
              - set-environment
            requires:
              - approve-sandbox-changes
            filters: *on-push-main


        - terraform/plan:
            name: plan changes for preview environment
            context: *context
            shell: *shell
            workspace: preview
            tfc-workspace: my-pipeline-preview
            tfc-organization: twdps
            tfe-token: TFE_TOKEN
            terraform-var-file: environments/preview.tfvars.json
            snyk-version: installed
            snyk-organization: twdps
            snyk-additional-args: --report --target-name= my-pipeline-preview
            before-plan:
              - set-environment
            requires:
              - terraform static code analysis
            filters: *on-tag-main

        - approve-preview-changes:
            type: approval
            requires:
              - plan changes for preview environment
            filters: *on-tag-main

        - terraform/apply:
            name: apply changes to preview environment
            context: *context
            shell: *shell
            workspace: preview
            tfc-workspace: my-pipeline-preview
            tfc-organization: twdps
            tfe-token: TFE_TOKEN
            terraform-var-file: environments/preview.tfvars.json
            snyk-version: installed
            snyk-organization: twdps
            snyk-additional-args: --report --target-name= my-pipeline-preview
            before-plan:
              - set-environment
            requires:
              - approve-preview-changes
            filters: *on-tag-main
