# src/commands/tflint.yaml
# yamllint disable rule:line-length
---

description: |
  Run terraform-linters/tflint in working-directory.

  Overrides available:
  - generates a .tflint.hcl config file to support the tflint-provider specified.
  - You can fully manage configuration by maintaining .tflint.hcl in your repo.
  - if you include a .tflint.hcl file, you specify a provider; e.g., plugin "aws" { enabled = true }.

parameters:

  working-directory:
    description: Specific folder in which to run the commands.
    type: string
    default: "."

  tflint-version:
    description: |
      Providing a tflint version results in a tflint scan of the repo using
      the desired version. Specify version "installed" to use the version
      already installed on the executor.
    type: string
    default: ""

  tflint-provider:
    description: Provider plugin. Valid options are "aws", "azurerm", "google", "".
    type: enum
    enum: ["aws", "azurerm", "google", ""]
    default: ""

  tflint-additional-args:
    description: |
      Include any additional tflint commandline arguments. Note: not all
      options can be successfully used in a pipeline.
    type: string
    default: ""

steps:
  - when:
      condition: << parameters.tflint-provider >>
      working_directory: << parameters.working-directory >>
      steps:
        - run:
            name: set tflint provider unless custom configuration file is present
            command: |
              if [[ ! -f ".tflint.hcl" ]]; then
                export ver=$(curl  "https://api.github.com/repos/terraform-linters/tflint-ruleset-aws/tags" | jq -r '.[0].name' | grep -Eo '[0-9]\.[0-9]+\.[0-9]+')
                cat \<<EOF > .tflint.hcl
                plugin "aws" {
                    enabled = true
                    version = "$ver"
                    source  = "github.com/terraform-linters/tflint-ruleset-aws"
                }
                EOF
              else
                echo "Provider not defined because .tflint.hcl already exists in working directory"
              fi
  - run:
      name: tflint scan of terraform files
      working_directory: << parameters.working-directory >>
      command: |
        tflint --version
        tflint --init
        tflint << parameters.tflint-additional-args >>
