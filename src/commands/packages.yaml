# src/commands/packages.yaml
# yamllint disable rule:line-length
---

description: |
  Install specified package versions on executor for orb dependencies.
  This is optional with the use of a twdps/circleci-infra convenience
  image. Each package-version parameter below can be used to install
  a specific version of the named package. If left blank or defined as
  "installed", the command will not attempt to install anything.

  Supported packagesL
  - terraform validate (default)
  - tflint
  - tfsec
  - checkov
  - snyk
  - terrascan
  - driftctl
  - infracost

  Note: When using "installed" as package version, caplitalization
  is important.
  
  When using your own custom executor, keep in mind that various
  package management dependencies will be required, and the install
  will use sudo since it assumes the executor container is running as
  a defined USER.

  Package management dependencies:
  - curl
  - unzip
  - pip
  - gnupg(gpg)
  - shasum
  - cosign
  - python/pip

parameters:

  terraform-version:
    type: string
    default: ""

  tflint-version:
    type: string
    default: ""

  tfsec-version:
    type: string
    default: ""

  trivy-version:
    type: string
    default: ""

  checkov-version:
    type: string
    default: ""

  snyk-version:
    type: string
    default: ""

  terrascan-version:
    type: string
    default: ""

  driftctl-version:
    type: string
    default: ""

  infracost-version:
    type: string
    default: ""

steps:
  - when:
      condition:
        and:
          - not:
              matches:
                pattern: "^installed$"
                value: << parameters.terraform-version >>
          - not:
              matches:
                pattern: "^$"
                value: << parameters.terraform-version >>
      steps:
        - run:
            name: install terraform version << parameters.terraform-version >>
            environment:
              TERRAFORM_VERSION: << parameters.terraform-version >>
            command: <<include(scripts/install_terraform.sh)>>
  - when:
      condition:
        and:
          - not:
              matches:
                pattern: "^installed$"
                value: << parameters.tflint-version >>
          - not:
              matches:
                pattern: "^$"
                value: << parameters.tflint-version >>
      steps:
        - run:
            name: install tflint version << parameters.tflint-version >>
            environment:
              TFLINT_VERSION: << parameters.tflint-version >>
            command: <<include(scripts/install_tflint.sh)>>
  - when:
      condition:
        and:
          - not:
              matches:
                pattern: "^installed$"
                value: << parameters.tfsec-version >>
          - not:
              matches:
                pattern: "^$"
                value: << parameters.tfsec-version >>
      steps:
        - run:
            name: install tfsec version << parameters.tfsec-version >>
            environment:
              TFSEC_VERSION: << parameters.tfsec-version >>
            command: <<include(scripts/install_tfsec.sh)>>
  - when:
      condition:
        and:
          - not:
              matches:
                pattern: "^installed$"
                value: << parameters.trivy-version >>
          - not:
              matches:
                pattern: "^$"
                value: << parameters.trivy-version >>
      steps:
        - run:
            name: install trivy version << parameters.trivy-version >>
            environment:
              TRIVY_VERSION: << parameters.trivy-version >>
            command: <<include(scripts/install_trivy.sh)>>
  - when:
      condition:
        and:
          - not:
              matches:
                pattern: "^installed$"
                value: << parameters.checkov-version >>
          - not:
              matches:
                pattern: "^$"
                value: << parameters.checkov-version >>
      steps:
        - run:
            name: install checkov version << parameters.checkov-version >>
            command: |
              sudo pip install --no-cache-dir --break-system-packages checkov==<< parameters.checkov-version >>
              checkov --version
  - when:
      condition:
        and:
          - not:
              matches:
                pattern: "^installed$"
                value: << parameters.snyk-version >>
          - not:
              matches:
                pattern: "^$"
                value: << parameters.snyk-version >>
      steps:
        - run:
            name: install snyk version << parameters.snyk-version >>
            environment:
              SNYK_VERSION: << parameters.snyk-version >>
            command: <<include(scripts/install_snyk.sh)>>
  - when:
      condition:
        and:
          - not:
              matches:
                pattern: "^installed$"
                value: << parameters.terrascan-version >>
          - not:
              matches:
                pattern: "^$"
                value: << parameters.terrascan-version >>
      steps:
        - run:
            name: install terrascan version << parameters.terrascan-version >>
            environment:
              TERRASCAN_VERSION: << parameters.terrascan-version >>
            command: <<include(scripts/install_terrascan.sh)>>
  - when:
      condition:
        and:
          - not:
              matches:
                pattern: "^installed$"
                value: << parameters.driftctl-version >>
          - not:
              matches:
                pattern: "^$"
                value: << parameters.driftctl-version >>
      steps:
        - run:
            name: install driftctl version << parameters.driftctl-version >>
            environment:
              DRIFTCTL_VERSION: << parameters.driftctl-version >>
            command: <<include(scripts/install_driftctl.sh)>>
  - when:
      condition: << parameters.infracost-version >>
      steps:
        - run:
            name: install infracost version << parameters.infracost-version >>
            environment:
              INFRACOST_VERSION: << parameters.infracost-version >>
            command: <<include(scripts/install_infracost.sh)>>
